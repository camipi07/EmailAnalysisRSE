setwd("C:/Users/auror/OneDrive/Escritorio/proyecto_RSE/EmailAnalysisRSE")
library("igraph")
edges <- read.csv( "reduced-emails.edges" , header = TRUE, ,sep =' ')
g <- graph_from_data_frame( edges , directed = FALSE )
tkplot(g)
degree(g)
all_nodes <- c(edges$from, edges$to)
sort(unique(all_nodes))
library("igraph")
edges <- read.csv( "emails.edges" , header = TRUE, ,sep =' ')
g <- graph_from_data_frame( edges , directed = FALSE )
tkplot(g)
library("igraph")
edges <- read.csv( "emails.edges" , header = TRUE, ,sep =' ')
g <- graph.data.frame( edges , directed = FALSE )
tkplot(g)
library(tidyverse)
library(lubridate)
library(plotly)
library('ggplot2')
library(dplyr)
library(forecast)
library(stats)
library(tidyverse)
library(lubridate)
library(plotly)
library('ggplot2')
library(dplyr)
library(forecast)
library(stats)
emails_reduced <- read.csv("emails-timestamps.edges",row.names = NULL ,header=TRUE, sep = " ")
colnames(emails_reduced) <- c("sender","receiver","email_count","timestamp")
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
emails_reduced$timestamp <- ymd_hms(emails_reduced$timestamp)
emails_2001 <- emails_reduced %>% filter(timestamp > '2000-01-01' & timestamp < '2001-01-01' )
emails_reduced <- emails_2001 %>%
group_by(sender, receiver) %>%
summarize(total_emails = sum(email_count))
colnames(emails_reduced) <- c("source", "target", "value")
write.table(emails_reduced[, c("source", "target", "value")],
file = "emails-reduced.csv",
row.names = FALSE,
col.names = TRUE,
sep = ",",
quote = FALSE)
emails_reduced <- read.csv("emails-timestamps.edges",row.names = NULL ,header=TRUE, sep = " ")
colnames(emails_reduced) <- c("source","target","email_count","time")
emails_reduced <- read.csv("emails-timestamps.edges",row.names = NULL ,header=TRUE, sep = " ")
colnames(emails_reduced) <- c("source","target","email_count","time")
emails_reduced <- read.csv("emails-timestamps.edges",row.names = NULL ,header=TRUE, sep = " ")
colnames(emails_reduced) <- c("source","target","value","time")
emails_reduced$time <-as_datetime(emails_reduced$time)
emails_reduced$time <- ymd_hms(emails_reduced$time)
#emails_2001 <- emails_reduced %>% filter(time > '2000-01-01' & time < '2001-01-01' )
write.table(emails_reduced[, c("source", "target","value" ,"time")],
file = "emails.csv",
row.names = FALSE,
col.names = TRUE,
sep = ",",
quote = FALSE)
library("igraph")
library("plotly")
library("igraph")
library("plotly")
edges <- read.csv( "emails-reduced.edges" , header = TRUE, ,sep ='')
edges_with_relation <- edges
edges_with_relation$fromGestor <- edges_with_relation$from < 144
edges_with_relation$toGestor <- edges_with_relation$to < 144
g <- graph.data.frame( edges , directed = TRUE)
g <- simplify(g, edge.attr.comb = "sum")
d <- degree(as.undirected(g)) #Grados de los nodos
max(d) #Grado máximo
min(d) #Grado mínimo
d[which.max(degree(as.undirected(g)))] #Nodo que tiene el grado máximo
#Comunidades - Girvan-Newman
ebc <- edge.betweenness.community(as.undirected(g))
edges <- read.csv( "emails-reduced.edges" , header = TRUE, ,sep ='')
edges_with_relation <- edges
edges_with_relation$weight <-NULL
edges_with_relation$fromGestor <- edges_with_relation$from < 144
edges_with_relation$toGestor <- edges_with_relation$to < 144
g <- graph.data.frame( edges , directed = TRUE)
g <- simplify(g, edge.attr.comb = "sum")
d <- degree(as.undirected(g)) #Grados de los nodos
max(d) #Grado máximo
min(d) #Grado mínimo
d[which.max(degree(as.undirected(g)))] #Nodo que tiene el grado máximo
#Comunidades - Girvan-Newman
ebc <- edge.betweenness.community(as.undirected(g))
library(tidyverse)
library(lubridate)
library(plotly)
library('ggplot2')
library(dplyr)
library(forecast)
library(stats)
emails_reduced <- read.csv("emails-reduced.edges",row.names = NULL ,header=TRUE, sep = " ")
colnames(emails_reduced) <- c("from","to","weight")
emails_reduced$time <-as_datetime(emails_reduced$time)
emails_reduced$time <-as_datetime(emails_reduced$time)
emails_reduced <- read.csv("emails-timestamps.edges",row.names = NULL ,header=TRUE, sep = " ")
colnames(emails_reduced) <- c("from","to","weight")
emails_reduced$time <-as_datetime(emails_reduced$time)
emails_reduced <- read.csv("emails-timestamps.edges",row.names = NULL ,header=TRUE, sep = " ")
colnames(emails) <- c("sender","receiver","email_count","timestamp")
emails_reduced <- read.csv("emails-timestamps.edges",row.names = NULL ,header=TRUE, sep = " ")
colnames(emails_reduced) <- c("sender","receiver","email_count","timestamp")
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
emails_reduced$timestamp <- ymd_hms(emails_reduced$timestamp)
emails_december_2000 <- emails_reduced %>% filter(timestamp > '2000-12-01' & timestamp <'2000-12-31' )
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
emails_reduced$timestamp <- ymd_hms(emails_reduced$timestamp)
emails_december_2000 <- emails_reduced %>% filter(timestamp > '2000-12-01' & timestamp <'2000-12-31' )
emails_reduced <- emails_december_2000 %>%
group_by(sender, receiver) %>%
summarize(total_emails = sum(email_count))
colnames(emails_reduced) <- c("from","to","weight")
write.table(emails_reduced[, c("from","to","weight")],
file = "emails.edges",
row.names = FALSE,
col.names = TRUE,
sep = " ",
quote = FALSE)
write.table(emails_reduced[, c("from","to","weight")],
file = "emails-reduced-december-2000.edges",
row.names = FALSE,
col.names = TRUE,
sep = " ",
quote = FALSE)
edges <- read.csv( "emails-reduced-december-2000.edges" , header = TRUE, ,sep ='')
edges_with_relation <- edges
edges_with_relation$weight <-NULL
edges_with_relation$fromGestor <- edges_with_relation$from < 144
edges_with_relation$toGestor <- edges_with_relation$to < 144
g <- graph.data.frame( edges , directed = TRUE)
g <- simplify(g, edge.attr.comb = "sum")
library("igraph")
library("plotly")
edges <- read.csv( "emails-reduced-december-2000.edges" , header = TRUE, ,sep ='')
edges_with_relation <- edges
edges_with_relation$weight <-NULL
edges_with_relation$fromGestor <- edges_with_relation$from < 144
edges_with_relation$toGestor <- edges_with_relation$to < 144
g <- graph.data.frame( edges , directed = TRUE)
g <- simplify(g, edge.attr.comb = "sum")
edges <- read.csv( "emails-reduced-december-2000.edges" , header = TRUE, ,sep ='')
edges_with_relation <- edges
edges_with_relation$weight <-NULL
edges_with_relation$fromGestor <- edges_with_relation$from < 144
edges_with_relation$toGestor <- edges_with_relation$to < 144
g <- graph.data.frame( edges , directed = TRUE)
g <- simplify(g, edge.attr.comb = "sum")
library("igraph")
library("plotly")
edges <- read.csv( "emails-reduced-december-2000.edges" , header = TRUE, ,sep ='')
edges_with_relation <- edges
edges_with_relation$weight <-NULL
edges_with_relation$fromGestor <- edges_with_relation$from < 144
edges_with_relation$toGestor <- edges_with_relation$to < 144
g <- graph.data.frame( edges , directed = TRUE)
g <- simplify(g, edge.attr.comb = "sum")
d <- degree(as.undirected(g)) #Grados de los nodos
max(d) #Grado máximo
min(d) #Grado mínimo
d[which.max(degree(as.undirected(g)))] #Nodo que tiene el grado máximo
clique.number(g)
cliques(g)
#Comunidades - Girvan-Newman
ebc <- edge.betweenness.community(as.undirected(g))
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
library(tidyverse)
library(lubridate)
library(plotly)
library('ggplot2')
library(dplyr)
library(forecast)
library(stats)
emails_reduced <- read.csv("emails-timestamps.edges",row.names = NULL ,header=TRUE, sep = " ")
colnames(emails_reduced) <- c("sender","receiver","email_count","timestamp")
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
emails_reduced$timestamp <- ymd_hms(emails_reduced$timestamp)
emails_december_2000 <- emails_reduced %>% filter(timestamp > '2000-01-01' & timestamp <'2000-01-31' )
emails_reduced <- emails_december_2000 %>%
group_by(sender, receiver) %>%
summarize(total_emails = sum(email_count))
colnames(emails_reduced) <- c("from","to","weight")
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
emails_reduced <- read.csv("emails-timestamps.edges",row.names = NULL ,header=TRUE, sep = " ")
colnames(emails_reduced) <- c("sender","receiver","email_count","timestamp")
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
emails_reduced$timestamp <- ymd_hms(emails_reduced$timestamp)
emails_december_2000 <- emails_reduced %>% filter(timestamp > '2000-01-01' & timestamp <'2000-03-31' )
emails_reduced <- emails_december_2000 %>%
group_by(sender, receiver) %>%
summarize(total_emails = sum(email_count))
colnames(emails_reduced) <- c("from","to","weight")
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
emails_reduced <- read.csv("emails-timestamps.edges",row.names = NULL ,header=TRUE, sep = " ")
colnames(emails_reduced) <- c("sender","receiver","email_count","timestamp")
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
emails_reduced$timestamp <- ymd_hms(emails_reduced$timestamp)
emails_december_2000 <- emails_reduced %>% filter(timestamp > '2000-01-01' & timestamp <'2000-06-31' )
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
emails_reduced$timestamp <- ymd_hms(emails_reduced$timestamp)
emails_reduced <- emails_reduced %>% filter(timestamp > '2000-01-01' & timestamp <'2000-06-31' )
emails_reduced <- read.csv("emails-timestamps.edges",row.names = NULL ,header=TRUE, sep = " ")
colnames(emails_reduced) <- c("sender","receiver","email_count","timestamp")
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
emails_reduced$timestamp <- ymd_hms(emails_reduced$timestamp)
emails_reduced <- emails_reduced %>% filter(timestamp > '2000-01-01' & timestamp <'2000-06-31' )
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
emails_reduced$timestamp <- ymd_hms(emails_reduced$timestamp)
emails_reduced <- emails_reduced %>% filter(timestamp > '2000-01-01' & timestamp <'2000-06-30' )
emails_reduced <- emails_reduced %>%
group_by(sender, receiver) %>%
summarize(total_emails = sum(email_count))
colnames(emails_reduced) <- c("from","to","weight")
emails_reduced <- read.csv("emails-timestamps.edges",row.names = NULL ,header=TRUE, sep = " ")
colnames(emails_reduced) <- c("sender","receiver","email_count","timestamp")
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
emails_reduced$timestamp <- ymd_hms(emails_reduced$timestamp)
emails_reduced <- emails_reduced %>% filter(timestamp > '2000-01-01' & timestamp <'2000-06-30' )
emails_reduced <- emails_reduced %>%
group_by(sender, receiver) %>%
summarize(total_emails = sum(email_count))
colnames(emails_reduced) <- c("from","to","weight")
write.table(emails_reduced[, c("from","to","weight")],
file = "emails-reduced.edges",
row.names = FALSE,
col.names = TRUE,
sep = " ",
quote = FALSE)
edges <- read.csv( "emails.edges" , header = TRUE, ,sep ='')
edges_with_relation <- edges
edges_with_relation$weight <-NULL
edges_with_relation$fromGestor <- edges_with_relation$from < 144
edges_with_relation$toGestor <- edges_with_relation$to < 144
g <- graph.data.frame( edges , directed = TRUE)
library("igraph")
library("plotly")
library("igraph")
library("plotly")
edges <- read.csv( "emails.edges" , header = TRUE, ,sep ='')
edges_with_relation <- edges
edges_with_relation$weight <-NULL
edges_with_relation$fromGestor <- edges_with_relation$from < 144
edges_with_relation$toGestor <- edges_with_relation$to < 144
g <- graph.data.frame( edges , directed = TRUE)
g <- simplify(g, edge.attr.comb = "sum")
d <- degree(as.undirected(g)) #Grados de los nodos
max(d) #Grado máximo
min(d) #Grado mínimo
d[which.max(degree(as.undirected(g)))] #Nodo que tiene el grado máximo
#Medidas estructurales
graph.density(as.undirected(g))
transitivity(g)
reciprocity(g)
assortativity.degree(g)
assortativity_nominal(g,as.factor(V(g)$isGestor))
edges <- read.csv( "emails-reduced.edges" , header = TRUE, ,sep ='')
edges_with_relation <- edges
edges_with_relation$weight <-NULL
edges_with_relation$fromGestor <- edges_with_relation$from < 144
edges_with_relation$toGestor <- edges_with_relation$to < 144
g <- graph.data.frame( edges , directed = TRUE)
g <- simplify(g, edge.attr.comb = "sum")
d <- degree(as.undirected(g)) #Grados de los nodos
max(d) #Grado máximo
min(d) #Grado mínimo
d[which.max(degree(as.undirected(g)))] #Nodo que tiene el grado máximo
#Medidas estructurales
graph.density(as.undirected(g))
transitivity(g)
reciprocity(g)
assortativity.degree(g)
assortativity_nominal(g,as.factor(V(g)$isGestor))
clique.number(g)
cliques(g)
library(tidyverse)
library(lubridate)
library(plotly)
library('ggplot2')
library(dplyr)
library(forecast)
library(stats)
library(tidyverse)
library(lubridate)
library(plotly)
library('ggplot2')
library(dplyr)
library(forecast)
library(stats)
emails_reduced <- read.csv("emails-timestamps.edges",row.names = NULL ,header=TRUE, sep = " ")
colnames(emails_reduced) <- c("sender","receiver","email_count","timestamp")
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
emails_reduced$timestamp <- ymd_hms(emails_reduced$timestamp)
emails_reduced <- emails_reduced %>% filter(timestamp > '2000-01-01' & timestamp <'2000-02-28' )
emails_reduced <- emails_reduced %>%
group_by(sender, receiver) %>%
summarize(total_emails = sum(email_count))
colnames(emails_reduced) <- c("from","to","weight")
write.table(emails_reduced[, c("from","to","weight")],
file = "emails-reduced.edges",
row.names = FALSE,
col.names = TRUE,
sep = " ",
quote = FALSE)
library("igraph")
library("plotly")
library("igraph")
library("plotly")
edges <- read.csv( "emails-reduced.edges" , header = TRUE, ,sep ='')
edges_with_relation <- edges
edges_with_relation$weight <-NULL
edges_with_relation$fromGestor <- edges_with_relation$from < 144
edges_with_relation$toGestor <- edges_with_relation$to < 144
g <- graph.data.frame( edges , directed = TRUE)
g <- simplify(g, edge.attr.comb = "sum")
d <- degree(as.undirected(g)) #Grados de los nodos
max(d) #Grado máximo
min(d) #Grado mínimo
d[which.max(degree(as.undirected(g)))] #Nodo que tiene el grado máximo
clique.number(g)
cliques(g)
#Comunidades - Girvan-Newman
ebc <- edge.betweenness.community(as.undirected(g))
library(tidyverse)
library(lubridate)
library(plotly)
library('ggplot2')
library(dplyr)
library(forecast)
library(stats)
library(tidyverse)
library(lubridate)
library(plotly)
library('ggplot2')
library(dplyr)
library(forecast)
library(stats)
emails_reduced <- read.csv("emails-timestamps.edges",row.names = NULL ,header=TRUE, sep = " ")
colnames(emails_reduced) <- c("sender","receiver","email_count","timestamp")
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
emails_reduced$timestamp <- ymd_hms(emails_reduced$timestamp)
emails_reduced <- emails_reduced %>% filter(timestamp > '2000-01-01' & timestamp <'2000-01-31' )
emails_reduced <- emails_reduced %>%
group_by(sender, receiver) %>%
summarize(total_emails = sum(email_count))
colnames(emails_reduced) <- c("from","to","weight")
write.table(emails_reduced[, c("from","to","weight")],
file = "emails-reduced.edges",
row.names = FALSE,
col.names = TRUE,
sep = " ",
quote = FALSE)
library("igraph")
library("plotly")
edges <- read.csv( "emails-reduced.edges" , header = TRUE, ,sep ='')
edges_with_relation <- edges
edges_with_relation$weight <-NULL
edges_with_relation$fromGestor <- edges_with_relation$from < 144
edges_with_relation$toGestor <- edges_with_relation$to < 144
g <- graph.data.frame( edges , directed = TRUE)
g <- simplify(g, edge.attr.comb = "sum")
d <- degree(as.undirected(g)) #Grados de los nodos
max(d) #Grado máximo
min(d) #Grado mínimo
d[which.max(degree(as.undirected(g)))] #Nodo que tiene el grado máximo
#Comunidades - Girvan-Newman
ebc <- edge.betweenness.community(as.undirected(g))
library(tidyverse)
library(lubridate)
library(plotly)
library('ggplot2')
library(dplyr)
library(forecast)
library(stats)
library(tidyverse)
library(lubridate)
library(plotly)
library('ggplot2')
library(dplyr)
library(forecast)
library(stats)
emails_reduced <- read.csv("emails-timestamps.edges",row.names = NULL ,header=TRUE, sep = " ")
colnames(emails_reduced) <- c("sender","receiver","email_count","timestamp")
emails_reduced$timestamp <-as_datetime(emails_reduced$timestamp)
emails_reduced$timestamp <- ymd_hms(emails_reduced$timestamp)
emails_reduced <- emails_reduced %>% filter(timestamp > '2000-01-01' & timestamp <'2000-01-15' )
emails_reduced <- emails_reduced %>%
group_by(sender, receiver) %>%
summarize(total_emails = sum(email_count))
colnames(emails_reduced) <- c("from","to","weight")
write.table(emails_reduced[, c("from","to","weight")],
file = "emails-reduced.edges",
row.names = FALSE,
col.names = TRUE,
sep = " ",
quote = FALSE)
library("igraph")
library("plotly")
library("igraph")
library("plotly")
library("igraph")
library("plotly")
edges <- read.csv( "emails-reduced.edges" , header = TRUE, ,sep ='')
edges_with_relation <- edges
edges_with_relation$weight <-NULL
edges_with_relation$fromGestor <- edges_with_relation$from < 144
edges_with_relation$toGestor <- edges_with_relation$to < 144
g <- graph.data.frame( edges , directed = TRUE)
g <- simplify(g, edge.attr.comb = "sum")
d <- degree(as.undirected(g)) #Grados de los nodos
max(d) #Grado máximo
min(d) #Grado mínimo
d[which.max(degree(as.undirected(g)))] #Nodo que tiene el grado máximo
#Comunidades - Girvan-Newman
ebc <- edge.betweenness.community(as.undirected(g))
plot(ebc, as.undirected(g))
plot_dendrogram(ebc)
View(ebc)
View(ebc)
View(ebc)
ebc
#Comunidades - Particiones espectrales
lec <- leading.eigenvector.community(as.undirected(g))
plot(lec, as.undirected(g))
#Comunidades - Particiones espectrales
lec <- leading.eigenvector.community(as.undirected(g))
lec
plot(lec, as.undirected(g))
#Comunidades - Louvain
louv <- cluster_louvain(as.undirected(g))
louv
plot(louv,as.undirected(g))
#Comunidades - Leiden
leid <-cluster_leiden(as.undirected(g))
leid
plot(leid, objective_function = "modularity"),as.undirected(g))
#Comunidades - Leiden
leid <- cluster_leiden(as.undirected(g),objective_function = "modularity")
leid
plot(leid, as.undirected(g))
View(lec)
louv$membership
